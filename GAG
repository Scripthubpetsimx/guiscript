--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 62 | Scripts: 15 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));



-- StarterGui.ScreenGui.MAINFRAME
G2L["2"] = Instance.new("ImageLabel", G2L["1"]);
G2L["2"]["SliceCenter"] = Rect.new(100, 100, 100, 100);
G2L["2"]["SliceScale"] = 0.07;
G2L["2"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Image"] = [[rbxassetid://3570695787]];
G2L["2"]["Size"] = UDim2.new(0, 391, 0, 104);
G2L["2"]["BorderColor3"] = Color3.fromRGB(28, 43, 54);
G2L["2"]["BackgroundTransparency"] = 1;
G2L["2"]["Name"] = [[MAINFRAME]];
G2L["2"]["Position"] = UDim2.new(0.02593, 0, 0.10303, 0);


-- StarterGui.ScreenGui.MAINFRAME.UIAspectRatioConstraint
G2L["3"] = Instance.new("UIAspectRatioConstraint", G2L["2"]);
G2L["3"]["AspectRatio"] = 2.83;
G2L["3"]["AspectType"] = Enum.AspectType.ScaleWithParentSize;


-- StarterGui.ScreenGui.MAINFRAME.UIScale
G2L["4"] = Instance.new("UIScale", G2L["2"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN
G2L["5"] = Instance.new("ScrollingFrame", G2L["2"]);
G2L["5"]["Active"] = true;
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(72, 72, 72);
G2L["5"]["Name"] = [[MAIN]];
G2L["5"]["Size"] = UDim2.new(0, 376, 0, 97);
G2L["5"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Position"] = UDim2.new(0.0114, 0, 0.22437, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["BackgroundTransparency"] = 0.45;


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal
G2L["6"] = Instance.new("Frame", G2L["5"]);
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["Size"] = UDim2.new(0, 364, 0, 48);
G2L["6"]["Position"] = UDim2.new(0.0294, 0, 0.25109, 0);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Name"] = [[universal]];
G2L["6"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.KEYBOARD
G2L["7"] = Instance.new("TextButton", G2L["6"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7"]["Size"] = UDim2.new(0, 91, 0, 14);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[KEYBOARD]];
G2L["7"]["Name"] = [[KEYBOARD]];
G2L["7"]["Position"] = UDim2.new(-0.00636, 0, 0.59047, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.KEYBOARD.LocalScript
G2L["8"] = Instance.new("LocalScript", G2L["7"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.KEYBOARD.UICorner
G2L["9"] = Instance.new("UICorner", G2L["7"]);
G2L["9"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.Netless Bypass
G2L["a"] = Instance.new("TextButton", G2L["6"]);
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["TextSize"] = 14;
G2L["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["a"]["Size"] = UDim2.new(0, 79, 0, 14);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[NETLESS]];
G2L["a"]["Name"] = [[Netless Bypass]];
G2L["a"]["Position"] = UDim2.new(0.2811, 0, 0.56964, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.Netless Bypass.UICorner
G2L["b"] = Instance.new("UICorner", G2L["a"]);
G2L["b"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.Netless Bypass.LocalScript
G2L["c"] = Instance.new("LocalScript", G2L["a"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.RESET CHARACTER
G2L["d"] = Instance.new("TextButton", G2L["6"]);
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["TextSize"] = 14;
G2L["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d"]["Size"] = UDim2.new(0, 54, 0, 14);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Text"] = [[RESET]];
G2L["d"]["Name"] = [[RESET CHARACTER]];
G2L["d"]["Position"] = UDim2.new(0.55991, 0, 0.56964, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.RESET CHARACTER.LocalScript
G2L["e"] = Instance.new("LocalScript", G2L["d"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.RESET CHARACTER.UICorner
G2L["f"] = Instance.new("UICorner", G2L["d"]);
G2L["f"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations
G2L["10"] = Instance.new("Frame", G2L["5"]);
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["Size"] = UDim2.new(0, 356, 0, 160);
G2L["10"]["Position"] = UDim2.new(0.01868, 0, 0.34197, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Name"] = [[animations]];
G2L["10"]["BackgroundTransparency"] = 1;


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION !
G2L["11"] = Instance.new("TextButton", G2L["10"]);
G2L["11"]["BorderSizePixel"] = 0;
G2L["11"]["TextSize"] = 14;
G2L["11"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["11"]["Size"] = UDim2.new(0, 150, 0, 34);
G2L["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11"]["Text"] = [[JK TOOL (animation)]];
G2L["11"]["Name"] = [[ANIMATION !]];
G2L["11"]["Position"] = UDim2.new(-0.00021, 0, 0.27723, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION !.LocalScript
G2L["12"] = Instance.new("LocalScript", G2L["11"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION !.UICorner
G2L["13"] = Instance.new("UICorner", G2L["11"]);
G2L["13"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.TextLabel
G2L["14"] = Instance.new("TextLabel", G2L["10"]);
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TextSize"] = 14;
G2L["14"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["14"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["Size"] = UDim2.new(0, 133, 0, 19);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["Text"] = [[ANIMATIONS]];
G2L["14"]["Position"] = UDim2.new(0.0007, 0, -0.10268, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PET HAT
G2L["15"] = Instance.new("TextButton", G2L["10"]);
G2L["15"]["BorderSizePixel"] = 0;
G2L["15"]["TextSize"] = 14;
G2L["15"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["15"]["Size"] = UDim2.new(0, 150, 0, 34);
G2L["15"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15"]["Text"] = [[PET HAT]];
G2L["15"]["Name"] = [[PET HAT]];
G2L["15"]["Position"] = UDim2.new(-0.00021, 0, 0.53973, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PET HAT.LocalScript
G2L["16"] = Instance.new("LocalScript", G2L["15"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PET HAT.UICorner
G2L["17"] = Instance.new("UICorner", G2L["15"]);
G2L["17"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION @
G2L["18"] = Instance.new("TextButton", G2L["10"]);
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["TextSize"] = 14;
G2L["18"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["18"]["Size"] = UDim2.new(0, 150, 0, 34);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Text"] = [[ANIMATION TAB]];
G2L["18"]["Name"] = [[ANIMATION @]];
G2L["18"]["Position"] = UDim2.new(-0.0017, 0, 0.79598, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION @.LocalScript
G2L["19"] = Instance.new("LocalScript", G2L["18"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION @.UICorner
G2L["1a"] = Instance.new("UICorner", G2L["18"]);
G2L["1a"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PSYCHO
G2L["1b"] = Instance.new("TextButton", G2L["10"]);
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1b"]["Size"] = UDim2.new(0, 150, 0, 34);
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[PSYCHO]];
G2L["1b"]["Name"] = [[PSYCHO]];
G2L["1b"]["Position"] = UDim2.new(0.44642, 0, 0.27723, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PSYCHO.LocalScript
G2L["1c"] = Instance.new("LocalScript", G2L["1b"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PSYCHO.UICorner
G2L["1d"] = Instance.new("UICorner", G2L["1b"]);
G2L["1d"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.KILLER
G2L["1e"] = Instance.new("TextButton", G2L["10"]);
G2L["1e"]["BorderSizePixel"] = 0;
G2L["1e"]["TextSize"] = 14;
G2L["1e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["1e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1e"]["Size"] = UDim2.new(0, 150, 0, 34);
G2L["1e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e"]["Text"] = [[KILLER]];
G2L["1e"]["Name"] = [[KILLER]];
G2L["1e"]["Position"] = UDim2.new(0.44642, 0, 0.53973, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.KILLER.LocalScript
G2L["1f"] = Instance.new("LocalScript", G2L["1e"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.KILLER.UICorner
G2L["20"] = Instance.new("UICorner", G2L["1e"]);
G2L["20"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.RHAND
G2L["21"] = Instance.new("TextButton", G2L["10"]);
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["TextSize"] = 14;
G2L["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(69, 0, 0);
G2L["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["21"]["Size"] = UDim2.new(0, 150, 0, 34);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Text"] = [[REVENGE HAND]];
G2L["21"]["Name"] = [[RHAND]];
G2L["21"]["Position"] = UDim2.new(0.44642, 0, 0.79598, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.RHAND.LocalScript
G2L["22"] = Instance.new("LocalScript", G2L["21"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.RHAND.UICorner
G2L["23"] = Instance.new("UICorner", G2L["21"]);
G2L["23"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden
G2L["24"] = Instance.new("Frame", G2L["5"]);
G2L["24"]["BorderSizePixel"] = 0;
G2L["24"]["BackgroundColor3"] = Color3.fromRGB(10, 154, 51);
G2L["24"]["Size"] = UDim2.new(0, 215, 0, 61);
G2L["24"]["Position"] = UDim2.new(-0.0002, 0, 0.02674, 0);
G2L["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24"]["Name"] = [[grow a garden]];


-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame
G2L["25"] = Instance.new("Frame", G2L["24"]);
G2L["25"]["BorderSizePixel"] = 0;
G2L["25"]["BackgroundColor3"] = Color3.fromRGB(73, 54, 22);
G2L["25"]["Size"] = UDim2.new(0, 195, 0, 47);
G2L["25"]["Position"] = UDim2.new(0.03963, 0, 0.11, 0);
G2L["25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.SERVER SCANNER
G2L["26"] = Instance.new("TextButton", G2L["25"]);
G2L["26"]["TextWrapped"] = true;
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["TextSize"] = 14;
G2L["26"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(242, 206, 3);
G2L["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["26"]["Size"] = UDim2.new(0, 74, 0, 31);
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Text"] = [[SERVER SCANNER]];
G2L["26"]["Name"] = [[SERVER SCANNER]];
G2L["26"]["Position"] = UDim2.new(0.0537, 0, 0.18421, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.SERVER SCANNER.UICorner
G2L["27"] = Instance.new("UICorner", G2L["26"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.SERVER SCANNER.LocalScript
G2L["28"] = Instance.new("LocalScript", G2L["26"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.DUPLICATION
G2L["29"] = Instance.new("TextButton", G2L["25"]);
G2L["29"]["TextWrapped"] = true;
G2L["29"]["BorderSizePixel"] = 0;
G2L["29"]["TextSize"] = 14;
G2L["29"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["BackgroundColor3"] = Color3.fromRGB(242, 206, 3);
G2L["29"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["29"]["Size"] = UDim2.new(0, 44, 0, 31);
G2L["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29"]["Text"] = [[DUPER]];
G2L["29"]["Name"] = [[DUPLICATION]];
G2L["29"]["Position"] = UDim2.new(0.47488, 0, 0.18421, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.DUPLICATION.UICorner
G2L["2a"] = Instance.new("UICorner", G2L["29"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.DUPLICATION.LocalScript
G2L["2b"] = Instance.new("LocalScript", G2L["29"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.eh
G2L["2c"] = Instance.new("TextButton", G2L["25"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["BorderSizePixel"] = 0;
G2L["2c"]["TextSize"] = 14;
G2L["2c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(242, 206, 3);
G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2c"]["Size"] = UDim2.new(0, 34, 0, 33);
G2L["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["Text"] = [[No Lag]];
G2L["2c"]["Name"] = [[eh]];
G2L["2c"]["Position"] = UDim2.new(0.73379, 0, 0.17917, 0);


-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.eh.UICorner
G2L["2d"] = Instance.new("UICorner", G2L["2c"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.eh.LocalScript
G2L["2e"] = Instance.new("LocalScript", G2L["2c"]);



-- StarterGui.ScreenGui.MAINFRAME.CREDITS
G2L["2f"] = Instance.new("TextLabel", G2L["2"]);
G2L["2f"]["BorderSizePixel"] = 0;
G2L["2f"]["TextSize"] = 14;
G2L["2f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2f"]["BackgroundTransparency"] = 1;
G2L["2f"]["Size"] = UDim2.new(0, 214, 0, 31);
G2L["2f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f"]["Text"] = [[EXECUTIVERAT - MADE IN THE SEWER]];
G2L["2f"]["Name"] = [[CREDITS]];
G2L["2f"]["Position"] = UDim2.new(0.0112, 0, -0, 0);


-- StarterGui.ScreenGui.MAINFRAME.Minimize
G2L["30"] = Instance.new("TextButton", G2L["2"]);
G2L["30"]["BorderSizePixel"] = 0;
G2L["30"]["TextSize"] = 14;
G2L["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["30"]["BackgroundTransparency"] = 1;
G2L["30"]["Size"] = UDim2.new(0, 42, 0, 32);
G2L["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30"]["Text"] = [[|||]];
G2L["30"]["Name"] = [[Minimize]];
G2L["30"]["Rotation"] = 90;
G2L["30"]["Position"] = UDim2.new(0.94118, 0, -0, 0);


-- StarterGui.ScreenGui.MAINFRAME.Minimize.LocalScript
G2L["31"] = Instance.new("LocalScript", G2L["30"]);



-- StarterGui.ScreenGui.DPOP
G2L["32"] = Instance.new("Frame", G2L["1"]);
G2L["32"]["Visible"] = false;
G2L["32"]["Active"] = true;
G2L["32"]["BorderSizePixel"] = 0;
G2L["32"]["BackgroundColor3"] = Color3.fromRGB(171, 255, 255);
G2L["32"]["Size"] = UDim2.new(0, 351, 0, 182);
G2L["32"]["Position"] = UDim2.new(0.30236, 0, 0.24522, 0);
G2L["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32"]["Name"] = [[DPOP]];


-- StarterGui.ScreenGui.DPOP.Frame
G2L["33"] = Instance.new("Frame", G2L["32"]);
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(84, 84, 84);
G2L["33"]["Size"] = UDim2.new(0, 271, 0, 129);
G2L["33"]["Position"] = UDim2.new(0.02252, 0, 0.17921, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.DPOP.Frame.UICorner
G2L["34"] = Instance.new("UICorner", G2L["33"]);



-- StarterGui.ScreenGui.DPOP.Frame.DESCRIPTION
G2L["35"] = Instance.new("TextLabel", G2L["33"]);
G2L["35"]["TextWrapped"] = true;
G2L["35"]["BorderSizePixel"] = 0;
G2L["35"]["TextSize"] = 18;
G2L["35"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["35"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["35"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["35"]["BackgroundTransparency"] = 1;
G2L["35"]["Size"] = UDim2.new(0, 270, 0, 127);
G2L["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["35"]["Text"] = [[THE DUPLICATION METHOD IS NOW PATCHED, WE SINCERELY APOLOGIZE FOR THIS INCONVINIENCE, WERE STILL TRYING TO BRING IT BACK. THANK YOU AND SEE YOU SOON !!]];
G2L["35"]["Name"] = [[DESCRIPTION]];
G2L["35"]["Position"] = UDim2.new(0, 0, -0.05263, 0);


-- StarterGui.ScreenGui.DPOP.Frame.CLOSE
G2L["36"] = Instance.new("TextButton", G2L["33"]);
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["TextSize"] = 14;
G2L["36"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(101, 255, 4);
G2L["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["36"]["Size"] = UDim2.new(0, 170, 0, 22);
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["Text"] = [[I UNDERSTAND - CLOSE]];
G2L["36"]["Name"] = [[CLOSE]];
G2L["36"]["Position"] = UDim2.new(0.1837, 0, 0.93149, 0);


-- StarterGui.ScreenGui.DPOP.Frame.CLOSE.LocalScript
G2L["37"] = Instance.new("LocalScript", G2L["36"]);



-- StarterGui.ScreenGui.DPOP.UICorner
G2L["38"] = Instance.new("UICorner", G2L["32"]);



-- StarterGui.ScreenGui.DPOP.NOTICE
G2L["39"] = Instance.new("TextLabel", G2L["32"]);
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["TextSize"] = 26;
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["39"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["BackgroundTransparency"] = 1;
G2L["39"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[NOTICE !]];
G2L["39"]["Name"] = [[NOTICE]];
G2L["39"]["Position"] = UDim2.new(0.15408, 0, -0.04372, 0);


-- StarterGui.ScreenGui.DPOP.UIAspectRatioConstraint
G2L["3a"] = Instance.new("UIAspectRatioConstraint", G2L["32"]);
G2L["3a"]["AspectRatio"] = 1.5914;


-- StarterGui.ScreenGui.DPOP.UIScale
G2L["3b"] = Instance.new("UIScale", G2L["32"]);



-- StarterGui.ScreenGui.opengui
G2L["3c"] = Instance.new("TextButton", G2L["1"]);
G2L["3c"]["BorderSizePixel"] = 0;
G2L["3c"]["TextSize"] = 14;
G2L["3c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(227, 255, 132);
G2L["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3c"]["Size"] = UDim2.new(0, 55, 0, 50);
G2L["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["Text"] = [[OPEN]];
G2L["3c"]["Name"] = [[opengui]];
G2L["3c"]["Position"] = UDim2.new(0.0218, 0, 0.83287, 0);


-- StarterGui.ScreenGui.opengui.LocalScript
G2L["3d"] = Instance.new("LocalScript", G2L["3c"]);



-- StarterGui.ScreenGui.opengui.UICorner
G2L["3e"] = Instance.new("UICorner", G2L["3c"]);



-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.KEYBOARD.LocalScript
local function C_8()
local script = G2L["8"];
	-- Place this inside your keyboard GUI TextButton
	local button = script.Parent
	local coreGui = game:GetService("CoreGui")
	
	local function createKeyboardGUI()
		-- Load the keyboard script
		loadstring(game:HttpGet('https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/mob.txt', true))()
	
		local KeyboardguiWarriorRoberrVersion = Instance.new("ScreenGui")
		KeyboardguiWarriorRoberrVersion.Name = "Keyboard gui WarriorRoberr Version"
		KeyboardguiWarriorRoberrVersion.Parent = coreGui
		KeyboardguiWarriorRoberrVersion.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
		local Drag = Instance.new("Frame")
		Drag.Name = "Drag"
		Drag.Parent = KeyboardguiWarriorRoberrVersion
		Drag.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Drag.BorderSizePixel = 0
		Drag.Position = UDim2.new(0.15, 0, 0.06, 0)
		Drag.Size = UDim2.new(0, 270, 0, 30)
		Drag.Active = true
		Drag.Draggable = true
	
		local Close = Instance.new("TextButton")
		Close.Name = "Close"
		Close.Parent = Drag
		Close.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		Close.BorderSizePixel = 0
		Close.Position = UDim2.new(0.925, 0, 0, 0)
		Close.Size = UDim2.new(0, 30, 0, 30)
		Close.Font = Enum.Font.SourceSans
		Close.Text = "X"
		Close.TextColor3 = Color3.fromRGB(255, 255, 255)
		Close.TextSize = 20.000
	
		-- Move the keyboard into our custom GUI
		if coreGui:FindFirstChild("BUNB0yBUN BOARD") then
			local keyboard = coreGui["BUNB0yBUN BOARD"].KeyBoard
			keyboard.Parent = Drag
			keyboard.Position = UDim2.new(0, 0, 0, 35)
	
			if keyboard:FindFirstChild("Bunb0ybun") then
				keyboard.Bunb0ybun.Text = "BETTER VERSION"
				keyboard.Bunb0ybun.TextSize = 10
			end
	
			coreGui["BUNB0yBUN BOARD"]:Destroy()
		end
	
		Close.MouseButton1Click:Connect(function()
			KeyboardguiWarriorRoberrVersion:Destroy()
		end)
	end
	
	button.Activated:Connect(function()
		createKeyboardGUI()
	
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "EXECUTIVERAT",
			Text = "Virtual Keyboard Loaded",
			Duration = 3
		})
	end)
end;
task.spawn(C_8);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.Netless Bypass.LocalScript
local function C_c()
local script = G2L["c"];
	local button = script.Parent -- Change this if the script isn't a direct child of the button
	local netlessActive = false
	local connections = {} -- Stores Heartbeat connections to disconnect later
	
	button.MouseButton1Click:Connect(function()
		-- Toggle netless effect
		netlessActive = not netlessActive
	
		if netlessActive then
			-- Clear previous connections
			for _, conn in pairs(connections) do
				conn:Disconnect()
			end
			table.clear(connections)
	
			-- Apply velocity to all BaseParts except HumanoidRootPart
			for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
				if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then 
					local conn = game:GetService("RunService").Heartbeat:Connect(function()
						v.Velocity = Vector3.new(-30, 0, 0)
					end)
					table.insert(connections, conn)
				end
			end
	
			-- Notification
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "ExECUTIVERAT",
				Text = "Netless Activated",
				Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150",
				Duration = 5
			})
		else
			-- Disable netless
			for _, conn in pairs(connections) do
				conn:Disconnect()
			end
			table.clear(connections)
	
			-- Notification
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "ExECUTIVERAT",
				Text = "Netless Deactivated",
				Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150",
				Duration = 5
			})
		end
	end)
	
	-- Cleanup on script termination (optional but recommended)
	script.Destroying:Connect(function()
		for _, conn in pairs(connections) do
			conn:Disconnect()
		end
	end)
end;
task.spawn(C_c);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.universal.RESET CHARACTER.LocalScript
local function C_e()
local script = G2L["e"];
	-- Place this LocalScript inside your GUI button
	local button = script.Parent
	local player = game.Players.LocalPlayer
	
	local function resetCharacter()
		player:LoadCharacter()
	end
	
	button.MouseButton1Click:Connect(resetCharacter)
end;
task.spawn(C_e);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION !.LocalScript
local function C_12()
local script = G2L["12"];
	-- LocalScript inside the TextButton
	
	local button = script.Parent
	
	button.MouseButton1Click:Connect(function()
		local success, result = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/LolnotaKid/SCRIPTSBYVEUX/main/UFWboo.txt"))()
		end)
	
		if not success then
			warn("Error executing script: " .. tostring(result))
		end
	end)
	
end;
task.spawn(C_12);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PET HAT.LocalScript
local function C_16()
local script = G2L["16"];
	local button = script.Parent -- Change this if the script isn't directly in the button
	
	button.MouseButton1Click:Connect(function()
		-- Load and execute the remote script
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripthubpetsimx/guiscript/refs/heads/main/PETHAT"))()
	
		-- Optional notification
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Pet Simulator X",
			Text = "Hat script loaded!",
			Duration = 5
		})
	end)
end;
task.spawn(C_16);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.ANIMATION @.LocalScript
local function C_19()
local script = G2L["19"];
	local button = script.Parent -- Put this script inside your button
	
	button.MouseButton1Click:Connect(function()
		-- Load and execute the animation script
		loadstring(game:HttpGet("https://raw.githubusercontent.com/p0e1/1/refs/heads/main/Fe%20R6%20Animation"))()
	
		-- Optional notification
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Animation Script",
			Text = "R6 Animations loaded!",
			Duration = 5,
			Icon = "rbxassetid://4458901886" -- Optional icon
		})
	end)
end;
task.spawn(C_19);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.PSYCHO.LocalScript
local function C_1c()
local script = G2L["1c"];
	local button = script.Parent -- Change this if the script isn't directly in the button
	
	button.MouseButton1Click:Connect(function()
		-- Load and execute the remote script
		loadstring(game:HttpGet("https://pastefy.app/YJITpCRA/raw"))()
	
		-- Optional notification
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Pet Simulator X",
			Text = "Hat script loaded!",
			Duration = 5
		})
	end)
end;
task.spawn(C_1c);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.KILLER.LocalScript
local function C_1f()
local script = G2L["1f"];
	local button = script.Parent -- Change this if the script isn't directly in the button
	
	button.MouseButton1Click:Connect(function()
		-- Load and execute the remote script
		loadstring(game:HttpGet("https://pastefy.app/riYch0rX/raw"))() 
	
		-- Optional notification
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Pet Simulator X",
			Text = "Hat script loaded!",
			Duration = 5
		})
	end)
end;
task.spawn(C_1f);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.animations.RHAND.LocalScript
local function C_22()
local script = G2L["22"];
	local button = script.Parent -- Change this if the script isn't directly in the button
	
	button.MouseButton1Click:Connect(function()
		-- Load and execute the remote script
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripthubpetsimx/guiscript/refs/heads/main/reevenge%20hands.txt"))() 
	
		-- Optional notification
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "Pet Simulator X",
			Text = "Hat script loaded!",
			Duration = 5
		})
	end)
end;
task.spawn(C_22);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.SERVER SCANNER.LocalScript
local function C_28()
local script = G2L["28"];
	-- Place this LocalScript inside your 'SERVER SCANNER' TextButton
	local button = script.Parent
	local player = game:GetService("Players").LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local tweenService = game:GetService("TweenService")
	local runService = game:GetService("RunService")
	local lighting = game:GetService("Lighting")
	local textService = game:GetService("TextService")
	
	-- ================ UI CONSTRUCTOR ================
	local function createScannerUI()
		-- Persistent data storage
		local serverData = {
			jobId = game.JobId,
			scanResults = nil,
			firstScanTime = os.time()
		}
	
		-- Main scanner container
		local scannerContainer = Instance.new("Frame")
		scannerContainer.Name = "ScannerContainer"
		scannerContainer.AnchorPoint = Vector2.new(0.5, 0.5)
		scannerContainer.Position = UDim2.new(1.5, 0, 0.5, 0) -- Start off-screen
		scannerContainer.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
		scannerContainer.BackgroundTransparency = 0.1
		scannerContainer.BorderSizePixel = 0
		scannerContainer.Visible = false
		scannerContainer.Parent = gui
	
		-- Responsive sizing
		local function updateSize()
			local viewportSize = workspace.CurrentCamera.ViewportSize
			local width = math.clamp(viewportSize.X * 0.35, 280, 400)
			local height = math.clamp(viewportSize.Y * 0.5, 350, 500)
			scannerContainer.Size = UDim2.new(0, width, 0, height)
		end
	
		updateSize()
		workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(updateSize)
		workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateSize)
	
		-- UI Corner
		local corner = Instance.new("UICorner")
		corner.CornerRadius = UDim.new(0, 8)
		corner.Parent = scannerContainer
	
		-- Glowing border
		local stroke = Instance.new("UIStroke")
		stroke.Color = Color3.fromRGB(0, 200, 100)
		stroke.Thickness = 1.5
		stroke.Transparency = 0.3
		stroke.Parent = scannerContainer
	
		-- Header with gradient
		local header = Instance.new("Frame")
		header.Name = "Header"
		header.Size = UDim2.new(1, 0, 0.14, 0)
		header.Position = UDim2.new(0, 0, 0, 0)
		header.BackgroundColor3 = Color3.fromRGB(10, 15, 20)
		header.BorderSizePixel = 0
		header.Parent = scannerContainer
	
		local headerCorner = Instance.new("UICorner")
		headerCorner.CornerRadius = UDim.new(0, 8)
		headerCorner.Parent = header
	
		-- Scanner title
		local title = Instance.new("TextLabel")
		title.Name = "Title"
		title.Text = "SERVER SCANNER v5.0"
		title.Font = Enum.Font.Code
		title.TextSize = 18
		title.TextColor3 = Color3.fromRGB(0, 255, 150)
		title.BackgroundTransparency = 1
		title.Size = UDim2.new(0.7, 0, 0.8, 0)
		title.Position = UDim2.new(0.05, 0, 0.1, 0)
		title.TextXAlignment = Enum.TextXAlignment.Left
		title.Parent = header
	
		-- Server ID
		local serverId = Instance.new("TextLabel")
		serverId.Name = "ServerID"
		serverId.Text = "SERVER: "..string.sub(serverData.jobId, 1, 6).."..." -- Shortened ID
		serverId.Font = Enum.Font.Code
		serverId.TextSize = 12
		serverId.TextColor3 = Color3.fromRGB(100, 255, 200)
		serverId.BackgroundTransparency = 1
		serverId.Size = UDim2.new(0.3, 0, 0.8, 0)
		serverId.Position = UDim2.new(0.65, 0, 0.1, 0)
		serverId.TextXAlignment = Enum.TextXAlignment.Right
		serverId.Parent = header
	
		-- Status indicator
		local statusContainer = Instance.new("Frame")
		statusContainer.Name = "StatusContainer"
		statusContainer.Size = UDim2.new(0.9, 0, 0.08, 0)
		statusContainer.Position = UDim2.new(0.05, 0, 0.15, 0)
		statusContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
		statusContainer.BorderSizePixel = 0
		statusContainer.Parent = scannerContainer
	
		local statusCorner = Instance.new("UICorner")
		statusCorner.CornerRadius = UDim.new(0, 4)
		statusCorner.Parent = statusContainer
	
		local statusLabel = Instance.new("TextLabel")
		statusLabel.Name = "Status"
		statusLabel.Text = "STATUS: [OFFLINE]"
		statusLabel.Font = Enum.Font.Code
		statusLabel.TextSize = 14
		statusLabel.TextColor3 = Color3.fromRGB(255, 50, 50)
		statusLabel.BackgroundTransparency = 1
		statusLabel.Size = UDim2.new(1, 0, 1, 0)
		statusLabel.Position = UDim2.new(0.02, 0, 0, 0)
		statusLabel.TextXAlignment = Enum.TextXAlignment.Left
		statusLabel.Parent = statusContainer
	
		-- Scan results grid
		local resultsGrid = Instance.new("Frame")
		resultsGrid.Name = "ResultsGrid"
		resultsGrid.Size = UDim2.new(0.9, 0, 0.5, 0)
		resultsGrid.Position = UDim2.new(0.05, 0, 0.24, 0)
		resultsGrid.BackgroundTransparency = 1
		resultsGrid.Parent = scannerContainer
	
		-- Create a grid layout
		local gridLayout = Instance.new("UIGridLayout")
		gridLayout.CellPadding = UDim2.new(0, 4, 0, 6)
		gridLayout.CellSize = UDim2.new(0.48, 0, 0.2, 0)
		gridLayout.SortOrder = Enum.SortOrder.LayoutOrder
		gridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		gridLayout.Parent = resultsGrid
	
		-- Metric templates
		local metrics = {
			{name = "Srv Version", value = "Roblox/"..game.PlaceVersion},
			{name = "Credentials", value = player.Name.." ("..player.UserId..")"},
			{name = "Server Age", value = "00:00:00"},
			{name = "Server Time", value = os.date("%H:%M:%S")},
			{name = "Srv Luck", value = "0.00%"},
			{name = "Seed Luck", value = "0.00%"},
			{name = "Egg Luck", value = "0.00%"},
			{name = "Plant Luck", value = "0.00%"},
			{name = "Data Intgty", value = "0.00%"},
			{name = "Firewall", value = "Secure"}
		}
	
		-- Create metric cards
		local metricCards = {}
		for i, metric in ipairs(metrics) do
			local card = Instance.new("Frame")
			card.Name = metric.name.."Card"
			card.BackgroundColor3 = Color3.fromRGB(15, 20, 25)
			card.BorderSizePixel = 0
			card.LayoutOrder = i
			card.Parent = resultsGrid
	
			local cardCorner = Instance.new("UICorner")
			cardCorner.CornerRadius = UDim.new(0, 4)
			cardCorner.Parent = card
	
			local nameLabel = Instance.new("TextLabel")
			nameLabel.Name = "Name"
			nameLabel.Text = metric.name..":"
			nameLabel.Font = Enum.Font.Code
			nameLabel.TextSize = 11
			nameLabel.TextColor3 = Color3.fromRGB(100, 255, 200)
			nameLabel.BackgroundTransparency = 1
			nameLabel.Size = UDim2.new(0.95, 0, 0.4, 0)
			nameLabel.Position = UDim2.new(0.025, 0, 0.05, 0)
			nameLabel.TextXAlignment = Enum.TextXAlignment.Left
			nameLabel.Parent = card
	
			local valueLabel = Instance.new("TextLabel")
			valueLabel.Name = "Value"
			valueLabel.Text = "[PENDING]"
			valueLabel.Font = Enum.Font.Code
			valueLabel.TextSize = 12
			valueLabel.TextColor3 = Color3.fromRGB(0, 255, 150)
			valueLabel.BackgroundTransparency = 1
			valueLabel.Size = UDim2.new(0.95, 0, 0.5, 0)
			valueLabel.Position = UDim2.new(0.025, 0, 0.45, 0)
			valueLabel.TextXAlignment = Enum.TextXAlignment.Left
			valueLabel.Parent = card
	
			metricCards[metric.name] = valueLabel
		end
	
		-- Terminal output
		local terminalContainer = Instance.new("Frame")
		terminalContainer.Name = "TerminalContainer"
		terminalContainer.Size = UDim2.new(0.9, 0, 0.15, 0)
		terminalContainer.Position = UDim2.new(0.05, 0, 0.75, 0)
		terminalContainer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		terminalContainer.BackgroundTransparency = 0.3
		terminalContainer.BorderSizePixel = 0
		terminalContainer.Parent = scannerContainer
	
		local terminalCorner = Instance.new("UICorner")
		terminalCorner.CornerRadius = UDim.new(0, 4)
		terminalCorner.Parent = terminalContainer
	
		local terminalOutput = Instance.new("TextLabel")
		terminalOutput.Name = "TerminalOutput"
		terminalOutput.Text = "> SYSTEM READY\n> AWAITING COMMANDS"
		terminalOutput.Font = Enum.Font.Code
		terminalOutput.TextSize = 8
		terminalOutput.TextColor3 = Color3.fromRGB(0, 255, 150)
		terminalOutput.BackgroundTransparency = 1
		terminalOutput.Size = UDim2.new(0.95, 0, 0.95, 0)
		terminalOutput.Position = UDim2.new(0.025, 0, 0.025, 0)
		terminalOutput.TextXAlignment = Enum.TextXAlignment.Left
		terminalOutput.TextYAlignment = Enum.TextYAlignment.Top
		terminalOutput.TextWrapped = true
		terminalOutput.Parent = terminalContainer
	
		-- Control buttons
		local buttonContainer = Instance.new("Frame")
		buttonContainer.Name = "ButtonContainer"
		buttonContainer.Size = UDim2.new(0.9, 0, 0.08, 0)
		buttonContainer.Position = UDim2.new(0.05, 0, 0.87, 0)
		buttonContainer.BackgroundTransparency = 1
		buttonContainer.Parent = scannerContainer
	
		-- Scan button
		local scanButton = Instance.new("TextButton")
		scanButton.Name = "ScanButton"
		scanButton.Text = "INITIATE SCAN"
		scanButton.Font = Enum.Font.Code
		scanButton.TextSize = 13
		scanButton.TextColor3 = Color3.fromRGB(0, 0, 0)
		scanButton.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
		scanButton.Size = UDim2.new(0.48, 0, 1, 0)
		scanButton.Position = UDim2.new(0, 0, 0, 0)
		scanButton.Parent = buttonContainer
	
		local scanButtonCorner = Instance.new("UICorner")
		scanButtonCorner.CornerRadius = UDim.new(0, 4)
		scanButtonCorner.Parent = scanButton
	
		-- Close button
		local closeButton = Instance.new("TextButton")
		closeButton.Name = "CloseButton"
		closeButton.Text = "CLOSE"
		closeButton.Font = Enum.Font.Code
		closeButton.TextSize = 13
		closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		closeButton.BackgroundColor3 = Color3.fromRGB(100, 20, 30)
		closeButton.Size = UDim2.new(0.48, 0, 1, 0)
		closeButton.Position = UDim2.new(0.52, 0, 0, 0)
		closeButton.Parent = buttonContainer
	
		local closeButtonCorner = Instance.new("UICorner")
		closeButtonCorner.CornerRadius = UDim.new(0, 4)
		closeButtonCorner.Parent = closeButton
	
		-- Blinking cursor effect
		local showCursor = true
		runService.Heartbeat:Connect(function(dt)
			if scannerContainer.Visible then
				showCursor = not showCursor
				local cursorText = showCursor and "█" or ""
				terminalOutput.Text = terminalOutput.Text:gsub("█", "")..cursorText
			end
		end)
	
		-- Animation functions
		local function openScanner()
			scannerContainer.Visible = true
			local tween = tweenService:Create(scannerContainer, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {
				Position = UDim2.new(0.85, 0, 0.5, 0)
			})
			tween:Play()
		end
	
		local function closeScanner()
			local tween = tweenService:Create(scannerContainer, TweenInfo.new(0.4, Enum.EasingStyle.Quad), {
				Position = UDim2.new(1.5, 0, 0.5, 0)
			})
			tween:Play()
			tween.Completed:Wait()
			scannerContainer.Visible = false
		end
	
		-- Generate consistent luck values
		local function generateLuckValues()
			if serverData.scanResults then return serverData.scanResults end
	
			-- Create consistent values based on server ID
			local hash = 0
			for i = 1, #serverData.jobId do
				hash = (hash * 31 + string.byte(serverData.jobId, i)) % 2^32
			end
			local rng = Random.new(hash)
	
			serverData.scanResults = {
				serverLuck = math.floor(rng:NextNumber() * 10000)/100,
				seedPackLuck = math.floor(rng:NextNumber() * 10000)/100,
				eggLuck = math.floor(rng:NextNumber() * 10000)/100,
				plantLuck = math.floor(rng:NextNumber() * 10000)/100,
				dataIntegrity = math.floor(80 + rng:NextNumber() * 20 * 100)/100,
				firewallStatus = ({"Secure", "Compromised", "Vulnerable"})[math.floor(rng:NextNumber() * 3) + 1]
			}
	
			return serverData.scanResults
		end
	
		-- Format time display
		local function formatTime(seconds)
			local hours = math.floor(seconds / 3600)
			local minutes = math.floor((seconds % 3600) / 60)
			local seconds = math.floor(seconds % 60)
			return string.format("%02d:%02d:%02d", hours, minutes, seconds)
		end
	
		-- Terminal lines with hacker jargon
		local terminalLines = {
			"> INIT QUANTUM DECRYPT",
			"> BYPASS FIREWALL",
			"> ACCESS SEED MATRIX",
			"> DECODE LUCK ALGO",
			"> ANALYZE PROBABILITY",
			"> ESTABLISH CONNECTION",
			"> VERIFY INTEGRITY",
			"> COMPILE REPORT"
		}
	
		local function animateScan()
			-- Reset UI for new scan
			terminalOutput.Text = "> INIT SCAN"
			statusLabel.Text = "STATUS: [SCANNING...]"
			statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
	
			-- Reset all metrics to pending
			for _, card in pairs(metricCards) do
				card.Text = "[PENDING]"
				card.TextColor3 = Color3.fromRGB(150, 150, 150)
			end
	
			-- Add terminal output with delays
			for i, line in ipairs(terminalLines) do
				task.wait(math.random(3, 7)/10)
				terminalOutput.Text = terminalOutput.Text.."\n"..line
	
				-- Update status with progress
				statusLabel.Text = "STATUS: [SCAN "..math.floor((i/#terminalLines)*100).."%]"
			end
	
			-- Get luck values
			local luckValues = generateLuckValues()
	
			-- Update metrics
			task.wait(0.4)
			metricCards["Srv Version"].Text = "Roblox/"..game.PlaceVersion
			metricCards["Credentials"].Text = player.Name.." ("..player.UserId..")"
	
			-- Calculate server age
			local age = os.time() - serverData.firstScanTime
			metricCards["Server Age"].Text = formatTime(age)
	
			-- Update luck values
			task.wait(0.2)
			metricCards["Srv Luck"].Text = string.format("%.2f%%", luckValues.serverLuck)
			metricCards["Seed Luck"].Text = string.format("%.2f%%", luckValues.seedPackLuck)
			metricCards["Egg Luck"].Text = string.format("%.2f%%", luckValues.eggLuck)
			metricCards["Plant Luck"].Text = string.format("%.2f%%", luckValues.plantLuck)
	
			task.wait(0.2)
			metricCards["Data Intgty"].Text = string.format("%.2f%%", luckValues.dataIntegrity)
			metricCards["Firewall"].Text = luckValues.firewallStatus
	
			-- Update server time
			metricCards["Server Time"].Text = os.date("%H:%M:%S")
	
			-- Complete scan
			task.wait(0.4)
			statusLabel.Text = "STATUS: [COMPLETE]"
			statusLabel.TextColor3 = Color3.fromRGB(0, 255, 150)
			terminalOutput.Text = terminalOutput.Text.."\n> SCAN COMPLETE"
	
			-- Flash effect
			local originalColor = lighting.Ambient
			for i = 1, 2 do
				lighting.Ambient = Color3.fromRGB(0, 20, 8)
				task.wait(0.08)
				lighting.Ambient = originalColor
				task.wait(0.08)
			end
	
			-- Update colors for metrics
			for _, card in pairs(metricCards) do
				card.TextColor3 = Color3.fromRGB(0, 255, 150)
			end
		end
	
		-- Return the UI elements and functions
		return {
			container = scannerContainer,
			open = openScanner,
			close = closeScanner,
			scanButton = scanButton,
			closeButton = closeButton,
			animateScan = animateScan
		}
	end
	
	-- ================ MAIN EXECUTION ================
	local scannerUI = createScannerUI()
	
	-- Connect buttons
	button.MouseButton1Click:Connect(function()
		scannerUI.open()
	end)
	
	scannerUI.closeButton.MouseButton1Click:Connect(function()
		scannerUI.close()
	end)
	
	scannerUI.scanButton.MouseButton1Click:Connect(function()
		scannerUI.scanButton.Text = "SCANNING..."
		scannerUI.scanButton.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
	
		-- Run scan animation
		task.spawn(scannerUI.animateScan)
	
		-- Reset button after scan
		task.wait(2.5)
		scannerUI.scanButton.Text = "RESCAN"
		scannerUI.scanButton.BackgroundColor3 = Color3.fromRGB(0, 255, 150)
	end)
end;
task.spawn(C_28);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.DUPLICATION.LocalScript
local function C_2b()
local script = G2L["2b"];
	local button = script.Parent
	local player = game:GetService("Players").LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local dPopFrame = gui:WaitForChild("DPOP")
	local tweenService = game:GetService("TweenService")
	
	-- Animation settings
	local fadeTime = 0.3
	local easeStyle = Enum.EasingStyle.Quad
	local easeDirection = Enum.EasingDirection.Out
	
	-- List of frames that should remain transparent
	local transparentFrames = {
		NOTICE = true,
		DESCRIPTION = true
	}
	
	button.MouseButton1Click:Connect(function()
		if dPopFrame then
			-- Prepare for fade in
			dPopFrame.Visible = true
			dPopFrame.BackgroundTransparency = transparentFrames[dPopFrame.Name] and 1 or 1 -- Start transparent
	
			-- Get all descendant UI elements to fade
			local descendants = dPopFrame:GetDescendants()
			for _, element in ipairs(descendants) do
				if element:IsA("GuiObject") then
					-- Skip fading background for transparent frames
					if not transparentFrames[element.Name] then
						element.BackgroundTransparency = 1
					end
	
					-- Always fade text
					if element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox") then
						element.TextTransparency = 1
					end
				end
			end
	
			-- Create tweens
			local tweenInfo = TweenInfo.new(fadeTime, easeStyle, easeDirection)
	
			-- Tween main frame background (if not transparent)
			if not transparentFrames[dPopFrame.Name] then
				local frameTween = tweenService:Create(dPopFrame, tweenInfo, {BackgroundTransparency = 0})
				frameTween:Play()
			end
	
			-- Tween all elements
			for _, element in ipairs(descendants) do
				if element:IsA("GuiObject") then
					-- Tween background (if not transparent frame)
					if not transparentFrames[element.Name] then
						local elementTween = tweenService:Create(element, tweenInfo, {BackgroundTransparency = 0})
						elementTween:Play()
					end
	
					-- Always tween text
					if element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox") then
						local textTween = tweenService:Create(element, tweenInfo, {TextTransparency = 0})
						textTween:Play()
					end
				end
			end
		end
	end)
end;
task.spawn(C_2b);
-- StarterGui.ScreenGui.MAINFRAME.MAIN.grow a garden.Frame.eh.LocalScript
local function C_2e()
local script = G2L["2e"];
	local button = script.Parent -- Change this if the script isn't directly in the button
	
	button.MouseButton1Click:Connect(function()
		-- Load and execute the remote script
		loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/NoLag-id/No-Lag-HUB/refs/heads/main/Loader/LoaderV1.lua"))()
	
		-- Optional notification
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "NO LAG OFFICIAL",
			Text = "EXECUTIVERAT :>",
			Duration = 5
		})
	end)
end;
task.spawn(C_2e);
-- StarterGui.ScreenGui.MAINFRAME.Minimize.LocalScript
local function C_31()
local script = G2L["31"];
	local button = script.Parent
	local mainFrame = button:FindFirstAncestor("ScreenGui"):FindFirstChild("MAINFRAME")
	local tweenService = game:GetService("TweenService")
	
	button.MouseButton1Click:Connect(function()
		if mainFrame then
			local tween = tweenService:Create(mainFrame, TweenInfo.new(0.3), {BackgroundTransparency = 1})
			tween:Play()
			tween.Completed:Connect(function()
				mainFrame.Visible = false  -- Hide after fading
			end)
		end
	end)
end;
task.spawn(C_31);
-- StarterGui.ScreenGui.DPOP.Frame.CLOSE.LocalScript
local function C_37()
local script = G2L["37"];
	local button = script.Parent
	local dPopFrame = button:FindFirstAncestor("DPOP")
	local tweenService = game:GetService("TweenService")
	
	-- Animation settings
	local fadeTime = 0.3
	local easeStyle = Enum.EasingStyle.Quad
	local easeDirection = Enum.EasingDirection.Out
	
	-- List of frames that should remain transparent
	local transparentFrames = {
		NOTICE = true,
		DESCRIPTION = true
	}
	
	button.MouseButton1Click:Connect(function()
		if dPopFrame then
			-- Immediately disable input to prevent clicks during animation
			dPopFrame.Active = false
			dPopFrame.Visible = true -- Ensure it's visible for the fade-out
	
			local descendants = dPopFrame:GetDescendants()
			local tweenInfo = TweenInfo.new(fadeTime, easeStyle, easeDirection)
	
			-- Tween main frame (if not transparent)
			if not transparentFrames[dPopFrame.Name] then
				local frameTween = tweenService:Create(dPopFrame, tweenInfo, {BackgroundTransparency = 1})
				frameTween:Play()
			end
	
			-- Tween all elements
			for _, element in ipairs(descendants) do
				if element:IsA("GuiObject") then
					-- Tween background (if not transparent frame)
					if not transparentFrames[element.Name] then
						local elementTween = tweenService:Create(element, tweenInfo, {BackgroundTransparency = 1})
						elementTween:Play()
					end
	
					-- Always tween text
					if element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox") then
						local textTween = tweenService:Create(element, tweenInfo, {TextTransparency = 1})
						textTween:Play()
					end
				end
			end
	
			-- Hide after animation
			task.delay(fadeTime, function()
				dPopFrame.Visible = false
				-- Don't reset properties here if you want it to stay hidden
			end)
		end
	end)
end;
task.spawn(C_37);
-- StarterGui.ScreenGui.opengui.LocalScript
local function C_3d()
local script = G2L["3d"];
	local button = script.Parent
	local mainFrame = button:FindFirstAncestor("ScreenGui"):FindFirstChild("MAINFRAME")
	local tweenService = game:GetService("TweenService")
	
	button.MouseButton1Click:Connect(function()
		if mainFrame then
			mainFrame.Visible = true
			mainFrame.BackgroundTransparency = 1  -- Start transparent
			local tween = tweenService:Create(mainFrame, TweenInfo.new(0.3), {BackgroundTransparency = 0})
			tween:Play()
		end
	end)
end;
task.spawn(C_3d);

return G2L["1"], require;
